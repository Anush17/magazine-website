{"version":3,"sources":["components/Tilte/index.jsx","components/Cards/item.jsx","components/Cards/index.jsx","pages/News/index.js"],"names":["Title","title","className","CardItem","item","id","link","type","date","thumbnail","caption","hashtags","to","pathname","state","src","alt","map","hashtag","Cards","items","style","gridTemplateColumns","News","t","useTranslation","useState","setItems","useEffect","fetch","headers","then","response","json","data"],"mappings":"sIAYeA,IAVD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACV,oBAAIC,UAAU,+BAAd,SACKD,M,2DCiDME,EAjDE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACRC,EAA6DD,EAA7DC,GAAIJ,EAAyDG,EAAzDH,MAAOK,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,KAAMC,EAAsCJ,EAAtCI,KAAMC,EAAgCL,EAAhCK,UAAWC,EAAqBN,EAArBM,QAASC,EAAYP,EAAZO,SAExD,OACI,sBAAKT,UAAU,0BAAf,UACI,cAAC,IAAD,CAAMU,GAAI,CAAEC,SAAS,GAAD,OAAKP,EAAL,YAAaD,GAAMS,MAAOV,GAA9C,SACI,qBAAKF,UAAU,sBAAsBa,IAAKN,EAAWO,IAAKf,MAG9D,sBAAKC,UAAU,MAAf,UACI,oBAAGA,UAAU,eAAb,UACKK,EADL,MACcC,KAEd,cAAC,IAAD,CAAMI,GAAI,CAAEC,SAAS,GAAD,OAAKP,EAAL,YAAaD,GAAMS,MAAOV,GAA9C,SACI,mBAAGF,UAAU,2BAAb,SAAyCD,MAE7C,mBAAGC,UAAU,wBAAb,SACKQ,OAGT,qBAAKR,UAAU,YAAf,SACKe,YAAIN,GAAU,SAAAO,GAAO,OAClB,uBAAMhB,UAAU,kGAAhB,cAGCgB,cCINC,IA5BD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACV,qBAAKlB,UAAU,uCACVmB,MAAO,CAAEC,oBAAqB,wCADnC,SAGKL,YAAIG,GAAO,SAAAhB,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKC,W,yFCgC7CkB,UAnCF,WACT,IAAOC,EAAKC,cAALD,EACP,EAA0BE,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KAsBA,OAJAC,qBAAU,WAfNC,MAAM,gBAAgB,CACdC,QAAU,CACN,eAAgB,mBAChB,OAAU,sBAIjBC,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACHP,EAASO,QAMnB,IAGE,sBAAKhC,UAAU,QAAf,UACI,cAAC,IAAD,CAAOD,MAAOuB,EAAE,qBAChB,cAAC,IAAD,CAAOJ,MAAOA,IACd,qBAAKlB,UAAU,wCACf,cAAC,IAAD,CAAOD,MAAOuB,EAAE,iBAChB,cAAC,IAAD,CAAOJ,MAAOA","file":"static/js/3.02898358.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Title = ({title}) => (\r\n    <h1 className=\"font-bold text-3xl px-3 py-6\">\r\n        {title}\r\n    </h1>\r\n)\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Title;","import {map} from \"lodash-es\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CardItem = ({item}) => {\r\n    const {id, title, link, type, date, thumbnail, caption, hashtags} = item;\r\n\r\n    return (\r\n        <div className=\"rounded overflow-hidden\">\r\n            <Link to={{ pathname: `${link}/${id}`, state: item }}>\r\n                <img className=\"w-full object-cover\" src={thumbnail} alt={title}/>\r\n            </Link>\r\n\r\n            <div className=\"p-3\">\r\n                <p className=\"py-2 text-xs\">\r\n                    {type} - {date}\r\n                </p>\r\n                <Link to={{ pathname: `${link}/${id}`, state: item }}>\r\n                    <p className=\"font-bold text-base mb-1\">{title}</p>\r\n                </Link>\r\n                <p className=\"text-gray-700 text-sm\">\r\n                    {caption}\r\n                </p>\r\n            </div>\r\n            <div className=\"px-4 pt-2\">\r\n                {map(hashtags, hashtag => (\r\n                    <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1\r\n                               text-sm font-semibold text-gray-700 mr-2 mb-2\"\r\n                    >\r\n                   #{hashtag}\r\n                </span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        link: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        thumbnail: PropTypes.string.isRequired,\r\n        caption: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.element\r\n        ]),\r\n        hashtags: PropTypes.array\r\n    })\r\n};\r\n\r\nexport default CardItem;","import {map} from \"lodash-es\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CardItem from \"./item\";\r\n\r\nconst Cards = ({items}) => (\r\n    <div className=\"grid gap-8 mx-4 justify-items-center\"\r\n         style={{ gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))' }}\r\n    >\r\n        {map(items, item => <CardItem item={item} key={item.id} />)}\r\n    </div>\r\n);\r\n\r\nCards.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            link: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            date: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            description: PropTypes.string.isRequired,\r\n            thumbnail: PropTypes.string.isRequired,\r\n            caption: PropTypes.oneOfType([\r\n                PropTypes.string,\r\n                PropTypes.element\r\n            ]),\r\n            hashtags: PropTypes.array\r\n        })\r\n    )\r\n};\r\n\r\n\r\nexport default Cards;\r\n","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nimport Title from \"../../components/Tilte\";\nimport Cards from \"../../components/Cards\";\n\nconst News = () => {\n    const {t} = useTranslation();\n    const [items, setItems] = useState([]);\n\n    const getData = () => {\n        fetch('newsData.json',{\n                headers : {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            }\n        )\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                setItems(data);\n            });\n    }\n\n    useEffect(() => {\n        getData();\n    },[])\n\n    return (\n        <div className=\"pb-14\">\n            <Title title={t('titles.trending')}/>\n            <Cards items={items}/>\n            <div className=\"my-8 w-4/5 mx-auto h-px bg-gray-300\"/>\n            <Title title={t('titles.more')} />\n            <Cards items={items}/>\n        </div>\n    );\n}\n\nexport default News;\n"],"sourceRoot":""}