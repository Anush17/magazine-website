{"version":3,"file":"static/js/76.b70e69a2.chunk.js","mappings":"mLAGMA,EAAW,SAACC,GACd,IAAMC,GAAcC,EAAAA,EAAAA,UACpB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,OAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,EAAkBR,EAAlBQ,SAAkBR,EAARS,IAQlB,OACI,iBACIC,QARiB,WACrB,IAAMC,EAAYV,EAAYW,QAAQC,WAAW,GAAGC,aACpDT,GAAUD,GACVG,EAAW,GAAD,OAAII,EAAY,GAAhB,QAMNI,UAAU,0CAFd,WAII,gBAAIA,UAAU,0FAAd,UACKP,EAASQ,MAENZ,GACI,gBAAKa,MAAM,6BAA6BF,UAAU,6BAA6BG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAtH,UACI,iBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIC,EAAE,gBAG5E,gBAAKJ,MAAM,6BAA6BF,UAAU,6BAA6BG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAtH,UACI,iBAAME,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGH,EAAE,yBAKrF,gBACII,IAAKxB,EAAac,UAAU,eAC5BW,MAAOtB,EAAQ,CAACuB,OAAQrB,GAAY,CAACqB,OAAQ,OAFjD,UAII,0BACI,cAAGZ,UAAU,gBAAb,SACKP,EAASoB,eAuDlC,UA/CY,WACR,OAA8BzB,EAAAA,EAAAA,WAAS,GAAvC,eAAgB0B,GAAhB,WACA,GAA0B1B,EAAAA,EAAAA,UAAS,IAAnC,eAAO2B,EAAP,KAAcC,EAAd,KA4BA,OAJAC,EAAAA,EAAAA,YAAU,YAtBM,WACZ,IAAIC,GAAY,EACZA,IACAJ,GAAW,GACXK,EAAAA,EAAAA,UACKC,MAAK,SAAAC,GACF,IAAMC,EAAOD,EAAIC,KAAKC,KAAI,SAAAC,GAAI,yBACvBA,GADuB,IAE1BC,IAAKD,EAAKE,QAEVR,GACAF,EAASM,MAGhBK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAMjB,GAAW,OAQlCkB,KACF,KAGE,qBAAShC,UAAU,6EAAnB,WACI,iBAAKA,UAAU,wBAAf,WACI,eAAIA,UAAU,uCAAd,yCAGA,cAAGA,UAAU,yCAAb,mGAIJ,gBAAKA,UAAU,0BAAf,SACKe,EAAMQ,KAAI,SAACC,EAAMS,GAAP,OAAiB,SAACjD,EAAD,CAAsBS,SAAU+B,GAAjBS,a,kECvF3D,E,MAAeC,GAAAA,OAAa,CACxBC,QAAS,wBACTC,QAAS,CACL,eAAgB,sBCHxB,GACIC,QADW,SACHC,GACJ,OAAOC,EAAAA,IAAe,QAAS,CAAED,OAAAA,KAGrCE,cALW,SAKGd,GACV,OAAOa,EAAAA,IAAA,gBAAwBb,KAGnCe,aATW,SASEH,GACT,OAAOC,EAAAA,IAAe,SAAU,CAAED,OAAAA,KAGtCI,gBAbW,SAaKJ,GACZ,OAAOC,EAAAA,IAAe,gBAAiB,CAAED,OAAAA,KAG7CK,QAjBW,SAiBHL,GACJ,OAAOC,EAAAA,IAAe,QAAS,CAAED,OAAAA","sources":["pages/Faq/index.jsx","services/api/client.js","services/api/index.js"],"sourcesContent":["import {useEffect, useRef, useState} from \"react\"\r\nimport ApiService from \"../../services/api\";\r\n\r\nconst FaqsItem = (props) => {\r\n    const answerElRef = useRef()\r\n    const [state, setState] = useState(false)\r\n    const [answerH, setAnswerH] = useState('0px')\r\n    const { faqsList, idx } = props\r\n\r\n    const handleOpenAnswer = () => {\r\n        const answerElH = answerElRef.current.childNodes[0].offsetHeight\r\n        setState(!state)\r\n        setAnswerH(`${answerElH + 20}px`)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={handleOpenAnswer}\r\n            className=\"space-y-3 mt-5 overflow-hidden border-b\"\r\n        >\r\n            <h4 className=\"cursor-pointer pb-5 flex items-center justify-between text-lg text-gray-700 font-medium\">\r\n                {faqsList.title}\r\n                {\r\n                    state ? (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 12H4\" />\r\n                        </svg>\r\n                    ) : (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                        </svg>\r\n                    )\r\n                }\r\n            </h4>\r\n            <div\r\n                ref={answerElRef} className=\"duration-300\"\r\n                style={state ? {height: answerH } : {height: '0px'}}\r\n            >\r\n                <div>\r\n                    <p className=\"text-gray-500\">\r\n                        {faqsList.desc}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FAQ = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    const getList = () => {\r\n        let isMounted = true;\r\n        if (isMounted) {\r\n            setLoading(true);\r\n            ApiService.getFaqs()\r\n                .then(res => {\r\n                    const data = res.data.map(item => ({\r\n                        ...item,\r\n                        key: item.id\r\n                    }));\r\n                    if (isMounted) {\r\n                        setItems(data);\r\n                    }\r\n                })\r\n                .catch(error => console.log(error))\r\n                .finally(() => setLoading(false));\r\n        }\r\n        return () => {\r\n            isMounted = false;\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    },[])\r\n\r\n    return (\r\n        <section className=\"leading-relaxed bg-white max-w-screen-xl m-2 py-12 px-4 lg:px-8 rounded-md\">\r\n            <div className=\"space-y-3 text-center\">\r\n                <h1 className=\"text-3xl text-gray-800 font-semibold\">\r\n                    Frequently Asked Questions\r\n                </h1>\r\n                <p className=\"text-gray-600 max-w-lg mx-auto text-lg\">\r\n                    Answered all frequently asked questions, Still confused? feel free to contact us.\r\n                </p>\r\n            </div>\r\n            <div className=\"mt-14 max-w-2xl mx-auto\">\r\n                {items.map((item, index) => <FaqsItem key={index} faqsList={item}/>)}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FAQ;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:8000\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import HttpClient from \"./client\";\r\n\r\nexport default {\r\n    getNews(params) {\r\n        return HttpClient.get('/news', { params });\r\n    },\r\n\r\n    getSingleNews(id) {\r\n        return HttpClient.get(`/news/${id}`);\r\n    },\r\n\r\n    getSportNews(params) {\r\n        return HttpClient.get('/sport', { params });\r\n    },\r\n\r\n    getTechnologies(params) {\r\n        return HttpClient.get('/technologies', { params });\r\n    },\r\n\r\n    getFaqs(params) {\r\n        return HttpClient.get('/faqs', { params });\r\n    },\r\n}"],"names":["FaqsItem","props","answerElRef","useRef","useState","state","setState","answerH","setAnswerH","faqsList","idx","onClick","answerElH","current","childNodes","offsetHeight","className","title","xmlns","fill","viewBox","stroke","d","strokeLinecap","strokeLinejoin","strokeWidth","ref","style","height","desc","setLoading","items","setItems","useEffect","isMounted","ApiService","then","res","data","map","item","key","id","catch","error","console","log","finally","getList","index","axios","baseURL","headers","getNews","params","HttpClient","getSingleNews","getSportNews","getTechnologies","getFaqs"],"sourceRoot":""}